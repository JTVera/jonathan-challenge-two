* :root {
    --dark: #adc4da;
    --light: #fff;
    --peach: #d8a47f;
  }

{
    box-sizing: border-box;
  }
  
  body {
    font-family: Arial;
    margin: 0;
  }
  
  header {
    padding: 40px;
    text-align: center;
    background: #8e3c96;
    color: #fff;
  }
  
  /* 
  What happens when we set the display property to flex?
  The flex container becomes flexible 
  */
  nav {
    display: flex;
    background-color: #a155e9;
  }
  
  nav a {
    color: #13293d;
    padding: 14px 20px;
    text-decoration: none;
    text-align: center;
  }
  
  /* 
  What is the flex-wrap property?
  It specifies whether the flex items should wrap or not 
  */
  main {
    display: flex;
    flex-wrap: wrap;
  }
  
  aside {
    flex: 1;
    background-color: #8e3c96;
    padding: 80px;
    text-align: center;
  }
  
  footer {
    padding: 20px;
    text-align: center;
    background: #13293d;
    color: #fff;
  }
  
  /* 
  What does the justify-content property do?
  It is used to align the flex items; in our case, the product cards 
  */
  .body {
    flex: 4;
    background-color: rgb(255, 253, 253);
    padding: 20px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
  }
  

  .card {
    border-style: solid;
    border-width: 1px;
    border-radius: 10px;
    padding: 10px;
    flex: 0 0 400px;
  }
  
  .card header {
    padding: 20px;
  }
  
  .card p {
    text-align: center;
  }
  
  .card img {
    width: 100%;
  }
  
  /* 
  What does the flex-direction property define?
  It defines in which direction the container wants to stack the flex items
  What is it doing here? 
  We are telling the main body and navbar to stack vertically in a column
  */
  @media screen and (max-width: 768px) {
    main,
    nav {
      flex-direction: column;
    }
  }
